[run]

omit =
    *__init__*
    
    # mock out test dir
    */test/* 
    
    # mock out widgets
    *QCodeEditor*
    *QColorButton*
    *QCustomListWidgets*
    *QPreferencesManager*

[report]

# also exclude part of code that contain modal dialog call
exclude_lines =

    if __name__ == .__main__.:
    
    pragma: no cover
    
    .exec()_
    
    # suppres includig the app launch into report
    def run
    
    #required for dealing with modal QFileDialog
    def getPathString
    
    # exclude parts of code from app.core module
    
    def __str__
    
    # exclude parts of code from app.dialogs module

    # contain  QFileDialog.getOpenFileName    
    def importXMLdlg_callback
    # contain  QFileDialog.getSaveFileName
    def saveXML_as_callback
    # contain  QFileDialog.getSaveFileName
    def exportIMG_callback
    def about_callback
    def doc_callback
    
    # exclude parts of code from app.dialogs module

    # is called as modal dialog
    class QNotImplemented
    # is called as modal dialog
    class DialogExportLG
    # contain QFondDialog
    def changeFont_callback
    # contain  QFileDialog.getOpenFileName
    def process_cif_callback
    # site selection dlg is modal
    def select_all
    raise ValueError
    
    # exclude event in mpl_pane
    if event.inaxes is None:
    
    # contain QColorDialog
    def onColorPicker
    
